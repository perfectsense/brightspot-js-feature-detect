var bodyEle = document.querySelector('body');

class BspFeatureDetect {
	/**
	 * isTouchDevice is a static value, so set it once on
	 * init with detectIsTouchDevice
	 */
	get isTouchDevice() {
		return this._isTouchDevice;
	}
	set isTouchDevice(value = false) {
		this._isTouchDevice = value;
	}
	detectIsTouchDevice() { // @see: http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript
		var msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture;
		this.isTouchDevice = (( "ontouchstart" in window ) || msGesture || window.DocumentTouch && document instanceof DocumentTouch);
	}

	/**
	 * currentBreakpoint is a dynamic value generated by CSS media
	 * queries, so use a getter to fetch the latest value
	 */
	get currentBreakpoint() {
		return window.getComputedStyle(bodyEle, ':before').getPropertyValue('content').replace(/\"/g, '').replace(/\'/g, '');
	}
	set currentBreakpoint(bp) {} // can't have a getter without a setter

	/**
	 * On init, just need to do static var detection
	 */
	constructor() {
		this.detectIsTouchDevice();
	}
}

/** exports single instance */
export default new BspFeatureDetect();