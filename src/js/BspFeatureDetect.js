export default class BspFeatureDetect {
	
	/**
	 * breakpoint is a dynamic value generated by CSS media queries
	 *
	 * Example:
	 * body:before { content: "mobile"; }
	 * @media (min-width: 740px) { body:before { content: "tablet"; } }
	 * @media (min-width: 1024px) { body:before { content: "desktop"; } }
	 */
	static breakpoint() {
		var bodyEle = document.querySelector('body');
		return window.getComputedStyle(bodyEle, ':before').getPropertyValue('content').replace(/\"/g, '').replace(/\'/g, '');		
	}

	static IEVersion() {
		var msie;
		var ua;
		var version;
		if (this.isIE()) {
			ua = window.navigator.userAgent;
			msie = ua.indexOf("MSIE ");
			return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
		}		
	}

	static isIE() {
		return window.navigator.userAgent.indexOf("MSIE ") > 0;
	}

	static isHttps() {
		return location.protocol === 'https:';
	}

	static isSafari() {
		return (navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1);
	}

	static isTouchDevice() {
		var touchFound = false;
		let msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture;
		if (( "ontouchstart" in window ) || msGesture || window.DocumentTouch && document instanceof DocumentTouch) {
			touchFound = true;
		}
		return touchFound;
	}

	static orientation() {
		var value = 'landscape';
		if (window.innerHeight > window.innerWidth) {
			value = 'portrait';
		}
		return value;
	}
}